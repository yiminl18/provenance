{"ast":null,"code":"var _jsxFileName = \"/Users/diegoguzman/Downloads/provenance/front_end/src/interface/App.js\",\n  _s = $RefreshSig$();\nimport Graph from \"react-graph-vis\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Node } from \"../classes/Node.ts\";\nimport { Edge } from \"../classes/Edge.ts\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar allNodes = [];\nvar allEdges = [];\nvar rerender = true;\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  },\n  height: '70.7%'\n};\nfunction fetchJSONData() {\n  const fetchJsonData = require('../testData/mockData4.json');\n  // const fetchJsonData = require('../testData/mockData10.json');\n  // const fetchJsonData = require('../testData/mockData50.json');\n  createNodes(fetchJsonData);\n  createEdges(fetchJsonData);\n}\nconst createNodes = data => {\n  for (const nodeTitle in data) {\n    var createdNode = new Node(data[nodeTitle].node_id, data[nodeTitle].node_name, data[nodeTitle].in_nodes, data[nodeTitle].out_nodes, data[nodeTitle].in_data, data[nodeTitle].out_data);\n    allNodes.push(createdNode);\n  }\n};\nconst createEdges = data => {\n  for (const nodeTitle in data) {\n    data[nodeTitle].out_nodes.forEach(outGoingId => {\n      var createdEdge = new Edge(data[nodeTitle].node_id, outGoingId);\n      allEdges.push(createdEdge);\n    });\n  }\n};\nconst App = () => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(\"\");\n  useEffect(() => {\n    if (rerender == true) {\n      console.log(\"began fetching for json data\");\n      fetchJSONData();\n      rerender = false;\n    } else {\n      console.log(\"already rendered\");\n    }\n  }, []);\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: allNodes.map(node => ({\n        id: node.id,\n        label: node.name,\n        color: \"#ADD8E6\"\n      })),\n      edges: allEdges.map(edge => ({\n        from: edge.inComingId,\n        to: edge.outGoingId\n      }))\n    },\n    events: {\n      select: ({\n        nodes,\n        edges\n      }) => {\n        allNodes.forEach(currentNode => {\n          if (currentNode.id == nodes) {\n            setSelectedNode(currentNode);\n          }\n        });\n      }\n    }\n  });\n  const {\n    graph,\n    events\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"webPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"webPageTitle\",\n      children: \"Node Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"theGraph\",\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        graph: graph,\n        options: options,\n        events: events,\n        style: {\n          height: \"640px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"NodeInfoSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ClickedNodeTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Selected Node:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 36\n        }, this), \" \", selectedNode.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"InComingDataContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"In-Coming Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }, this), \" \", selectedNode.inData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"OutGoingDataContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Out-Going Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }, this), \"  \", selectedNode.outData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9Umu/b2iWPtiGEy/HaX5nfywfjI=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Graph","React","useState","useEffect","ReactDOM","Node","Edge","jsxDEV","_jsxDEV","allNodes","allEdges","rerender","options","layout","hierarchical","edges","color","height","fetchJSONData","fetchJsonData","require","createNodes","createEdges","data","nodeTitle","createdNode","node_id","node_name","in_nodes","out_nodes","in_data","out_data","push","forEach","outGoingId","createdEdge","App","_s","selectedNode","setSelectedNode","console","log","state","setState","counter","graph","nodes","map","node","id","label","name","edge","from","inComingId","to","events","select","currentNode","children","fileName","_jsxFileName","lineNumber","columnNumber","style","inData","outData","_c","render","document","getElementById","$RefreshReg$"],"sources":["/Users/diegoguzman/Downloads/provenance/front_end/src/interface/App.js"],"sourcesContent":["\n\nimport Graph from \"react-graph-vis\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Node } from \"../classes/Node.ts\"\nimport { Edge } from \"../classes/Edge.ts\"\nimport './App.css';\n\nvar allNodes = [];\nvar allEdges = [];\nvar rerender = true\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  },\n  height: '70.7%',\n};\n\n\nfunction fetchJSONData() {\n  const fetchJsonData = require('../testData/mockData4.json');\n  // const fetchJsonData = require('../testData/mockData10.json');\n  // const fetchJsonData = require('../testData/mockData50.json');\n  createNodes(fetchJsonData)\n  createEdges(fetchJsonData)\n}\n\nconst createNodes = (data) => {\n  for (const nodeTitle in data) {\n\n    var createdNode = new Node( data[nodeTitle].node_id, data[nodeTitle].node_name, \n      data[nodeTitle].in_nodes, data[nodeTitle].out_nodes, data[nodeTitle].in_data, data[nodeTitle].out_data)   \n  \n    allNodes.push(createdNode)\n  }\n};\n\nconst createEdges = (data) => {\n  for (const nodeTitle in data) {\n    data[nodeTitle].out_nodes.forEach(outGoingId => {\n      \n      var createdEdge = new Edge(data[nodeTitle].node_id, outGoingId)   \n      allEdges.push(createdEdge) \n    });\n  }\n};\n\n\nconst App = () => {\n  const [selectedNode, setSelectedNode] = useState(\"\");\n  useEffect(() => {\n    if (rerender == true){\n      console.log(\"began fetching for json data\")\n      fetchJSONData();\n      rerender = false\n    }\n    else{\n      console.log(\"already rendered\")\n    }\n\n  }, []);\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes:allNodes.map((node) => ({\n        id: node.id,\n        label: node.name,\n        color: \"#ADD8E6\",\n      })),\n      edges:allEdges.map((edge) => ({\n        from: edge.inComingId,\n        to: edge.outGoingId,\n      })),\n    },\n    events: {\n      select: ({ nodes, edges }) => {\n        allNodes.forEach(currentNode =>{\n         if (currentNode.id == nodes){\n          setSelectedNode(currentNode)\n         }\n        }) \n      }\n    }\n  })\n  \n  const { graph, events } = state;\n  \n  return (\n    <div id=\"webPage\">\n      <h1 id=\"webPageTitle\">Node Interface</h1>\n      <div id=\"theGraph\">\n        <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }}/>\n      </div>\n      <section id=\"NodeInfoSection\">\n        <div id=\"ClickedNodeTitle\"><b>Selected Node:</b> {selectedNode.name}</div>\n        <div id=\"InComingDataContainer\"><b>In-Coming Data:</b> {selectedNode.inData}</div>\n        <div id=\"OutGoingDataContainer\"><b>Out-Going Data:</b>  {selectedNode.outData}</div>\n      </section>\n      \n    </div>\n  );\n\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}